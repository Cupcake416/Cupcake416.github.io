{"title":"「luogu2764」最小路径覆盖问题","date":"2018-03-08T05:16:14.000Z","excerpt":"","slug":"「luogu2764」最小路径覆盖问题","updated":"2018-07-14T14:06:05.808Z","content":"<h2 id=\"题目大意\"><a href=\"#题目大意\" class=\"headerlink\" title=\"题目大意\"></a>题目大意</h2><p>求一个DAG的最小路径覆盖，输出方案。</p>\n<h2 id=\"解析\"><a href=\"#解析\" class=\"headerlink\" title=\"解析\"></a>解析</h2><p>把原图中的每个点都拆成两个点，然后对于原图中的每条边$(u,v)$，连接$(u,v’)$。</p>\n<p>求这个二分图的最大匹配，最小路径覆盖数就是原节点数-最大匹配数。</p>\n<p>因为在这个二分图中，每增加一个匹配相当与把两个路径合成一条，答案数减一。</p>\n<p>输出方案只要沿着匹配边走一遍就可以啦。</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N=<span class=\"number\">160</span>,M=<span class=\"number\">6010</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m,link[N&lt;&lt;<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;point[N&lt;&lt;<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">bool</span> used[N&lt;&lt;<span class=\"number\">1</span>],start[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">find</span><span class=\"params\">(<span class=\"keyword\">int</span> k)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;point[k].size();i++)<span class=\"keyword\">if</span>(!used[point[k][i]])&#123;</span><br><span class=\"line\">        used[point[k][i]]=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!link[point[k][i]]||find(link[point[k][i]]))&#123;</span><br><span class=\"line\">            link[point[k][i]]=k;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">bool</span> vis[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> t1,t2,ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;n,&amp;m);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=m;i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;t1,&amp;t2);</span><br><span class=\"line\">        point[t2].push_back(t1+n);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">memset</span>(used,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(used));</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(find(i)) ans++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ans=n-ans;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(vis[i]) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        vis[i]=<span class=\"number\">1</span>;</span><br><span class=\"line\">        t1=link[i+n];</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(t1)&#123;</span><br><span class=\"line\">            vis[t1]=start[t1]=<span class=\"number\">1</span>;</span><br><span class=\"line\">            t1=link[t1+n];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)<span class=\"keyword\">if</span>(!start[i])&#123;</span><br><span class=\"line\">        t1=i;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(t1)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,t1);</span><br><span class=\"line\">            t1=link[t1+n];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">\"\\n\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\"</span>,ans);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","prev":{"title":"「luogu1251」餐巾计划问题","slug":"「luogu1251」餐巾计划问题"},"next":{"title":"「luogu2763」试题库问题","slug":"「luogu2763」试题库问题"},"link":"/2018/03/08","toc":[{"title":"题目大意","id":"题目大意","index":"1"},{"title":"解析","id":"解析","index":"2"},{"title":"代码","id":"代码","index":"3"}]}