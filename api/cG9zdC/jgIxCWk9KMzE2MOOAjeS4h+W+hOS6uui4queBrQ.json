{"title":"「BZOJ3160」万径人踪灭","date":"2018-03-08T05:14:57.000Z","excerpt":"","slug":"「BZOJ3160」万径人踪灭","updated":"2018-07-14T12:51:03.397Z","content":"<h2 id=\"题目大意\"><a href=\"#题目大意\" class=\"headerlink\" title=\"题目大意\"></a>题目大意</h2><p>求一个只含a,b的字符串中位置和字符都关于某条对称轴对称且不连续的子序列个数，答案对1000000007取模。</p>\n<h2 id=\"解析\"><a href=\"#解析\" class=\"headerlink\" title=\"解析\"></a>解析</h2><p>先求出所有满足第一个条件的子序列个数，再减去回文子串个数。</p>\n<p>回文子串个数可以用manacher求出，关键是第一步。</p>\n<p>我们先考虑确定一个对称轴，那么只要知道关于这条对称轴对称的字符对个数,记为$F_i$，那么对答案的贡献就是$2^{F_i}-1$。</p>\n<p>写出$F_i$的表达式:</p>\n<script type=\"math/tex; mode=display\">F_i=\\sum_{j}^{} {s[i-j]==s[i+j]}</script><p>我们发现这是个卷积形式，把字符串中a的位置赋为1，b的位置赋为0，就可以求出a的贡献，同理可求出b的贡献。</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> ll long long</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> db double</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N=<span class=\"number\">150010</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> ll mod=<span class=\"number\">1e9</span>+<span class=\"number\">7</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> db PI=<span class=\"built_in\">acos</span>(<span class=\"number\">-1</span>);</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Complex</span>&#123;</span></span><br><span class=\"line\">    db real,image;</span><br><span class=\"line\">    Complex(db _real=<span class=\"number\">0</span>,db _image=<span class=\"number\">0</span>):real(_real),image(_image)&#123;&#125;</span><br><span class=\"line\">    Complex <span class=\"keyword\">operator</span>+(Complex k)<span class=\"keyword\">const</span>&#123;<span class=\"keyword\">return</span> Complex(real+k.real,image+k.image);&#125;</span><br><span class=\"line\">    Complex <span class=\"keyword\">operator</span>-(Complex k)<span class=\"keyword\">const</span>&#123;<span class=\"keyword\">return</span> Complex(real-k.real,image-k.image);&#125;</span><br><span class=\"line\">    Complex <span class=\"keyword\">operator</span>*(Complex k)<span class=\"keyword\">const</span>&#123;<span class=\"keyword\">return</span> Complex(real*k.real-image*k.image,real*k.image+image*k.real);&#125;</span><br><span class=\"line\">    Complex <span class=\"keyword\">operator</span>/(<span class=\"keyword\">int</span> k)<span class=\"keyword\">const</span>&#123;<span class=\"keyword\">return</span> Complex(real/k,image/k);&#125;</span><br><span class=\"line\">&#125;a[N&lt;&lt;<span class=\"number\">1</span>],b[N&lt;&lt;<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m,l,maxp,f[N&lt;&lt;<span class=\"number\">1</span>],rev[N&lt;&lt;<span class=\"number\">1</span>],pow2[N&lt;&lt;<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">char</span> s[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">fft</span><span class=\"params\">(Complex* x,<span class=\"keyword\">int</span> f)</span></span>&#123;<span class=\"comment\">//f=1时为fft，f=-1时为ifft</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++) <span class=\"keyword\">if</span>(rev[i]&gt;i) swap(x[i],x[rev[i]]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> len=<span class=\"number\">1</span>;len&lt;n;len&lt;&lt;=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        Complex wn(cos(PI/len),f*sin(PI/len));</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> now=<span class=\"number\">0</span>;now&lt;n<span class=\"number\">-1</span>;now+=(len&lt;&lt;<span class=\"number\">1</span>))&#123;</span><br><span class=\"line\">            <span class=\"function\">Complex <span class=\"title\">w</span><span class=\"params\">(<span class=\"number\">1</span>,<span class=\"number\">0</span>)</span></span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;len;i++,w=w*wn)&#123;</span><br><span class=\"line\">                Complex t1=x[now+i],t2=w*x[now+len+i];</span><br><span class=\"line\">                x[now+i]=t1+t2,x[now+len+i]=t1-t2;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(f==<span class=\"number\">-1</span>) <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++) x[i]=x[i]/n;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">int</span> maxr,pos,r[N&lt;&lt;<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"comment\">/** TLE代码</span></span><br><span class=\"line\"><span class=\"comment\">int manacher()&#123;</span></span><br><span class=\"line\"><span class=\"comment\">  int ans=0;</span></span><br><span class=\"line\"><span class=\"comment\">  s2[l2++]='#';</span></span><br><span class=\"line\"><span class=\"comment\">  for(int i=0;i&lt;l;i++) s2[l2++]=s[i],s2[l2++]='#';</span></span><br><span class=\"line\"><span class=\"comment\">  for(int i=0;i&lt;l2;i++)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">      r[i]=(maxr&gt;=i)?min(maxr-i+1,r[(pos&lt;&lt;1)-i]):1;</span></span><br><span class=\"line\"><span class=\"comment\">      while(i-r[i]&gt;=0&amp;&amp;i+r[i]&lt;l2&amp;&amp;s2[i-r[i]]==s2[i+r[i]]) r[i]++; </span></span><br><span class=\"line\"><span class=\"comment\">      if(r[i]&gt;maxr) maxr=r[i],pos=i;</span></span><br><span class=\"line\"><span class=\"comment\">      ans=ans+(r[i]&gt;&gt;1);</span></span><br><span class=\"line\"><span class=\"comment\">      if(ans&gt;mod) ans-=mod;</span></span><br><span class=\"line\"><span class=\"comment\">  &#125;</span></span><br><span class=\"line\"><span class=\"comment\">  return ans;</span></span><br><span class=\"line\"><span class=\"comment\">&#125;</span></span><br><span class=\"line\"><span class=\"comment\">**/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">manacher</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">    s[l+<span class=\"number\">1</span>]=<span class=\"string\">'#'</span>,s[<span class=\"number\">0</span>]=<span class=\"string\">'$'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=l;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(maxr&gt;i) r[i]=min(maxr-i+<span class=\"number\">1</span>,r[pos*<span class=\"number\">2</span>-i]);</span><br><span class=\"line\">        <span class=\"keyword\">else</span> r[i]=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(s[i+r[i]]==s[i-r[i]]) r[i]++;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i+r[i]<span class=\"number\">-1</span>&gt;maxr) maxr=i+r[i]<span class=\"number\">-1</span>,pos=i;</span><br><span class=\"line\">        ans=(ans+r[i])%mod;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    maxr=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=l;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(maxr&gt;i) r[i]=min(maxr-i,r[pos*<span class=\"number\">2</span>-i]);</span><br><span class=\"line\">        <span class=\"keyword\">else</span> r[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(s[i+r[i]+<span class=\"number\">1</span>]==s[i-r[i]]) r[i]++;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i+r[i]&gt;maxr) maxr=i+r[i],pos=i;</span><br><span class=\"line\">        ans=(ans+r[i])%mod;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>,s+<span class=\"number\">1</span>);</span><br><span class=\"line\">    l=<span class=\"built_in\">strlen</span>(s+<span class=\"number\">1</span>),n=l<span class=\"number\">-1</span>;</span><br><span class=\"line\">    m=n&lt;&lt;<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(n=<span class=\"number\">1</span>;n&lt;=m;n&lt;&lt;=<span class=\"number\">1</span>) maxp++;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;n;i++) rev[i]=(rev[i&gt;&gt;<span class=\"number\">1</span>]&gt;&gt;<span class=\"number\">1</span>)|((i&amp;<span class=\"number\">1</span>)&lt;&lt;(maxp<span class=\"number\">-1</span>));</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=l;i++) a[i<span class=\"number\">-1</span>].real=(s[i]==<span class=\"string\">'a'</span>),b[i<span class=\"number\">-1</span>].real=(s[i]==<span class=\"string\">'b'</span>);</span><br><span class=\"line\">    fft(a,<span class=\"number\">1</span>);fft(b,<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++) a[i]=a[i]*a[i],b[i]=b[i]*b[i];</span><br><span class=\"line\">    fft(a,<span class=\"number\">-1</span>);fft(b,<span class=\"number\">-1</span>);</span><br><span class=\"line\">    pow2[<span class=\"number\">0</span>]=<span class=\"number\">1</span>,f[<span class=\"number\">0</span>]=<span class=\"keyword\">int</span>(a[<span class=\"number\">0</span>].real+b[<span class=\"number\">0</span>].real+<span class=\"number\">1.1</span>)&gt;&gt;<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        pow2[i]=pow2[i<span class=\"number\">-1</span>]&lt;&lt;<span class=\"number\">1</span>,f[i]=<span class=\"keyword\">int</span>(a[i].real+b[i].real+<span class=\"number\">1.1</span>)&gt;&gt;<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(pow2[i]&gt;=mod) pow2[i]-=mod;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ll ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++) ans=(ans+pow2[f[i]]<span class=\"number\">-1</span>)%mod;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> temp=manacher();</span><br><span class=\"line\">    ans-=temp;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(ans&lt;<span class=\"number\">0</span>) ans+=mod;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld\"</span>,ans);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","prev":{"title":"「luogu2766」最长不下降子序列问题","slug":"「luogu2766」最长不下降子序列问题"},"next":{"title":"「luogu2765」魔术球问题","slug":"「luogu2765」魔术球问题"},"link":"/2018/03/08","toc":[{"title":"题目大意","id":"题目大意","index":"1"},{"title":"解析","id":"解析","index":"2"},{"title":"代码","id":"代码","index":"3"}]}