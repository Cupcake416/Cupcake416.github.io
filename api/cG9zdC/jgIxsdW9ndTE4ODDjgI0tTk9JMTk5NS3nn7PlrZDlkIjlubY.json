{"title":"「luogu1880」[NOI1995]石子合并","date":"2018-03-08T05:22:52.000Z","excerpt":"","slug":"「luogu1880」-NOI1995-石子合并","updated":"2018-07-16T14:11:32.335Z","content":"<h2 id=\"题目大意\"><a href=\"#题目大意\" class=\"headerlink\" title=\"题目大意\"></a>题目大意</h2><p>$N$堆石子排成一个环,现要将石子有次序地合并成一堆.每次只能选相邻的2堆合并成新的一堆，得分为新的一堆的石子数。</p>\n<p>计算将N堆石子合并成1堆的最小得分和最大得分。</p>\n<h2 id=\"解析\"><a href=\"#解析\" class=\"headerlink\" title=\"解析\"></a>解析</h2><p>四边形不等式优化的经典模型。</p>\n<p>以最大值为例，转移方程为：</p>\n<script type=\"math/tex; mode=display\">f[i][j]=\\max_{}(f[i][k]+f[k+1][j]+sum(i,j))</script><p>因为每堆石子数都是正的，所以代价函数$sum(i,j)$满足区间包含的单调性。</p>\n<p>sum(i,j)+sum(i-1,j+1)=sum(i-1,j)+sum(i,j+1),即sum满足四边形不等式。</p>\n<p>那么我们就可以用四边形不等式优化啦。</p>\n<p>记$p[i][j]$为$f[i][j]$的决策点，那么p[i][j]\\leq p[i][j+1]\\leq p[i+1][j+1]。</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N=<span class=\"number\">210</span>,oo=<span class=\"number\">2e9</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,a[N],f[N][N],p[N][N],ans1=oo,ans2;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++) <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;a[i]),a[i+n]=a[i];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=(n&lt;&lt;<span class=\"number\">1</span>);i++) a[i]+=a[i<span class=\"number\">-1</span>];</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(f,<span class=\"number\">127</span>/<span class=\"number\">3</span>,<span class=\"keyword\">sizeof</span>(f));</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=(n&lt;&lt;<span class=\"number\">1</span>);i++) f[i][i]=<span class=\"number\">0</span>,p[i][i]=i;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=n;i++)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j+i<span class=\"number\">-1</span>&lt;=(n&lt;&lt;<span class=\"number\">1</span>);j++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=p[j][i+j<span class=\"number\">-2</span>];k&lt;=p[j+<span class=\"number\">1</span>][i+j<span class=\"number\">-1</span>];k++)</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(f[j][i+j<span class=\"number\">-1</span>]&gt;f[j][k]+f[k+<span class=\"number\">1</span>][i+j<span class=\"number\">-1</span>]+a[i+j<span class=\"number\">-1</span>]-a[j<span class=\"number\">-1</span>]) f[j][i+j<span class=\"number\">-1</span>]=f[j][k]+f[k+<span class=\"number\">1</span>][i+j<span class=\"number\">-1</span>]+a[i+j<span class=\"number\">-1</span>]-a[j<span class=\"number\">-1</span>],p[j][i+j<span class=\"number\">-1</span>]=k;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i==n) ans1=min(ans1,f[j][i+j<span class=\"number\">-1</span>]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(f,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(f));</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=n;i++)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;i+j<span class=\"number\">-1</span>&lt;=(n&lt;&lt;<span class=\"number\">1</span>);j++)&#123;</span><br><span class=\"line\">            f[j][i+j<span class=\"number\">-1</span>]=max(f[j][i+j<span class=\"number\">-2</span>],f[j+<span class=\"number\">1</span>][i+j<span class=\"number\">-1</span>])+a[i+j<span class=\"number\">-1</span>]-a[j<span class=\"number\">-1</span>];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i==n) ans2=max(ans2,f[j][i+j<span class=\"number\">-1</span>]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n%d\"</span>,ans1,ans2);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","prev":{"title":"「BZOJ3572」[HNOI2014]世界树","slug":"「BZOJ3572」-HNOI2014-世界树"},"next":{"title":"「BZOJ1070」[SCOI2007]修车","slug":"「BZOJ1070」-SCOI2007-修车"},"link":"/2018/03/08","toc":[{"title":"题目大意","id":"题目大意","index":"1"},{"title":"解析","id":"解析","index":"2"},{"title":"代码","id":"代码","index":"3"}]}