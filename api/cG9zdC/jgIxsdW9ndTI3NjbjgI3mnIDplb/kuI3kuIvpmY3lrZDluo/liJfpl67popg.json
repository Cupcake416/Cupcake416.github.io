{"title":"「luogu2766」最长不下降子序列问题","date":"2018-03-08T05:15:30.000Z","excerpt":"","slug":"「luogu2766」最长不下降子序列问题","updated":"2018-07-14T14:42:16.690Z","content":"<h2 id=\"题目大意\"><a href=\"#题目大意\" class=\"headerlink\" title=\"题目大意\"></a>题目大意</h2><p>给定正整数序列$x_1,…,x_n$ 。</p>\n<p>(1) 计算其最长不下降子序列的长度$s$。</p>\n<p>(2) 计算从给定的序列中最多可取出多少个长度为$s$的不下降子序列。</p>\n<p>(3) 如果允许在取出的序列中多次使用$x_1$和$x_n$，则从给定序列中最多可取出多少个长度为$s$的不下降子序列。</p>\n<h2 id=\"解析\"><a href=\"#解析\" class=\"headerlink\" title=\"解析\"></a>解析</h2><p>第一问用动态规划解决,记答案为$ans_1$,保留$f[i]$供下面建模用。</p>\n<p>第二问可以看出是一个求路径覆盖数的问题，要求路径长度为$ans_1$。</p>\n<p>建模：<br>(1) 把每个点拆成$i$和$i’$,$i$向$i’$连一条边。<br>(2) 对于所有满足$i&lt;j$且$a[j]\\leq a[i]$且$f[i]==f[j]-1$的点，$i’$向$j$连一条边。<br>(3) 源点$s$向$f[i]==1$的点$i$连一条边，$f[i]==ans_1$的点$i’$向汇点$t$连一条边。</p>\n<p>这样从s到t的任何一条路径都是是按照$f[i]$的顺序走的，求出最大流也就是第二问的答案。</p>\n<p>把图中$(s,1)$、$(n’,t)$、$(1,1’)$、$(n,n’)$这4条边的容量改成正无穷,即可解决第三问。</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N=<span class=\"number\">510</span>,M=<span class=\"number\">251000</span>,oo=<span class=\"number\">2e9</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,a[N],f[N],ss,tt;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Edge</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> from,to,flow,cap;</span><br><span class=\"line\">    Edge(<span class=\"keyword\">int</span> _from=<span class=\"number\">0</span>,<span class=\"keyword\">int</span> _to=<span class=\"number\">0</span>,<span class=\"keyword\">int</span> _flow=<span class=\"number\">0</span>,<span class=\"keyword\">int</span> _cap=<span class=\"number\">0</span>):from(_from),to(_to),flow(_flow),cap(_cap)&#123;&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">Edge edge[M&lt;&lt;<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> edge_tot,spe[<span class=\"number\">10</span>];</span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;point[N&lt;&lt;<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">add_edge</span><span class=\"params\">(<span class=\"keyword\">int</span> f,<span class=\"keyword\">int</span> t,<span class=\"keyword\">int</span> c)</span></span>&#123;</span><br><span class=\"line\">    edge[edge_tot]=Edge(f,t,<span class=\"number\">0</span>,c);</span><br><span class=\"line\">    point[f].push_back(edge_tot++);</span><br><span class=\"line\">    edge[edge_tot]=Edge(t,f,<span class=\"number\">0</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">    point[t].push_back(edge_tot++);</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">int</span> level[N&lt;&lt;<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">bfs</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(level,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(level));</span><br><span class=\"line\">    <span class=\"built_in\">queue</span>&lt;<span class=\"keyword\">int</span>&gt;q;</span><br><span class=\"line\">    q.push(ss);</span><br><span class=\"line\">    level[ss]=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> x;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(!q.empty())&#123;</span><br><span class=\"line\">        x=q.front();q.pop();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;point[x].size();i++)&#123;</span><br><span class=\"line\">            Edge&amp; e=edge[point[x][i]];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(e.cap&gt;e.flow&amp;&amp;!level[e.to])&#123;</span><br><span class=\"line\">                level[e.to]=level[x]+<span class=\"number\">1</span>;</span><br><span class=\"line\">                q.push(e.to);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> level[tt];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> k,<span class=\"keyword\">int</span> aa)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(k==tt||!aa) <span class=\"keyword\">return</span> aa;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> temp,ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;point[k].size();i++)&#123;</span><br><span class=\"line\">        Edge&amp; e=edge[point[k][i]];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(e.cap&gt;e.flow&amp;&amp;level[e.to]==level[k]+<span class=\"number\">1</span>&amp;&amp;(temp=dfs(e.to,min(aa,e.cap-e.flow))))&#123;</span><br><span class=\"line\">            ans+=temp,aa-=temp;</span><br><span class=\"line\">            e.flow+=temp,edge[point[k][i]^<span class=\"number\">1</span>].flow-=temp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!aa) <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">dinic</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(bfs()) ans+=dfs(ss,oo);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ans1=<span class=\"number\">0</span>,ans2=<span class=\"number\">0</span>,ans3=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;n);</span><br><span class=\"line\">    ss=(n&lt;&lt;<span class=\"number\">1</span>)+<span class=\"number\">1</span>,tt=ss+<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++) <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;a[i]);</span><br><span class=\"line\">    a[<span class=\"number\">0</span>]=-oo;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;i;j++) <span class=\"keyword\">if</span>(a[i]&gt;=a[j]) f[i]=max(f[j]+<span class=\"number\">1</span>,f[i]);</span><br><span class=\"line\">        ans1=max(ans1,f[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,ans1);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i==<span class=\"number\">1</span>||i==n) spe[++spe[<span class=\"number\">0</span>]]=edge_tot;</span><br><span class=\"line\">        add_edge(i,i+n,<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(f[i]==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        \t<span class=\"keyword\">if</span>(i==<span class=\"number\">1</span>) spe[++spe[<span class=\"number\">0</span>]]=edge_tot;</span><br><span class=\"line\">\t\t\tadd_edge(ss,i,<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(f[i]==ans1)&#123;</span><br><span class=\"line\">        \t<span class=\"keyword\">if</span>(i==n) spe[++spe[<span class=\"number\">0</span>]]=edge_tot;</span><br><span class=\"line\">\t\t\tadd_edge(i+n,tt,<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=i+<span class=\"number\">1</span>;j&lt;=n;j++) <span class=\"keyword\">if</span>(a[j]&gt;=a[i]&amp;&amp;f[i]==f[j]<span class=\"number\">-1</span>)</span><br><span class=\"line\">            add_edge(i+n,j,<span class=\"number\">1</span>);</span><br><span class=\"line\">    ans2=dinic();</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,ans2);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;edge_tot;i++) edge[i].flow=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=spe[<span class=\"number\">0</span>];i++) edge[spe[i]].cap=oo;</span><br><span class=\"line\">    ans3=dinic();</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,ans3);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","prev":{"title":"「luogu2763」试题库问题","slug":"「luogu2763」试题库问题"},"next":{"title":"「BZOJ3160」万径人踪灭","slug":"「BZOJ3160」万径人踪灭"},"link":"/2018/03/08","toc":[{"title":"题目大意","id":"题目大意","index":"1"},{"title":"解析","id":"解析","index":"2"},{"title":"代码","id":"代码","index":"3"}]}