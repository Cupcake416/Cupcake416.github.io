{"title":"【BZOJ3262】陌上花开","date":"2018-03-08T05:56:52.000Z","excerpt":"","slug":"【BZOJ3262】陌上花开","updated":"2018-07-15T15:18:33.852Z","content":"<h2 id=\"题目大意\"><a href=\"#题目大意\" class=\"headerlink\" title=\"题目大意\"></a>题目大意</h2><p>有$n$朵花,每朵花有三个属性:$S$、$C$、$M$,用三个整数表示。<br>一朵花的级别是它拥有的美丽能超过的花的数量。<br>定义一朵花A比另一朵花B要美丽,当且仅$S_a&gt;=S_b,C_a&gt;=C_b,M_a&gt;=M_b$。<br>显然,两朵花可能有同样的属性。需要统计出评出每个等级的花的数量。</p>\n<h2 id=\"解析\"><a href=\"#解析\" class=\"headerlink\" title=\"解析\"></a>解析</h2><p>三元偏序问题模板</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><h3 id=\"CDQ分治\"><a href=\"#CDQ分治\" class=\"headerlink\" title=\"CDQ分治\"></a>CDQ分治</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N=<span class=\"number\">100010</span>,K=<span class=\"number\">200010</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,k,cnt[N],ans[N];</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> a,b,c,id;</span><br><span class=\"line\">    <span class=\"keyword\">bool</span> <span class=\"keyword\">operator</span>&lt;(<span class=\"keyword\">const</span> Node&amp; k)<span class=\"keyword\">const</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(b==k.b&amp;&amp;c==k.c) <span class=\"keyword\">return</span> a&lt;=k.a;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(b==k.b) <span class=\"keyword\">return</span> c&lt;=k.c;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> b&lt;=k.b;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;node[N],temp[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">cmp</span><span class=\"params\">(<span class=\"keyword\">const</span> Node&amp; x,<span class=\"keyword\">const</span> Node&amp; y)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(x.a==y.a&amp;&amp;x.b==y.b) <span class=\"keyword\">return</span> x.c&lt;y.c;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(x.a==y.a) <span class=\"keyword\">return</span> x.b&lt;y.b;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x.a&lt;y.a;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">lowbit</span><span class=\"params\">(<span class=\"keyword\">int</span> k)</span></span>&#123;<span class=\"keyword\">return</span> k&amp;(-k);&#125;</span><br><span class=\"line\"><span class=\"keyword\">int</span> tree[K],vis[K],timer;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">int</span> pos,<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(pos&lt;=k)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(vis[pos]!=timer) vis[pos]=timer,tree[pos]=<span class=\"number\">0</span>;</span><br><span class=\"line\">        tree[pos]+=x,pos+=lowbit(pos);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">que</span><span class=\"params\">(<span class=\"keyword\">int</span> pos)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> res=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(pos)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(vis[pos]!=timer) vis[pos]=timer,tree[pos]=<span class=\"number\">0</span>;</span><br><span class=\"line\">        res+=tree[pos],pos-=lowbit(pos);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">cdq</span><span class=\"params\">(<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(l&gt;=r) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> mid=(l+r)&gt;&gt;<span class=\"number\">1</span>;</span><br><span class=\"line\">    cdq(l,mid);cdq(mid+<span class=\"number\">1</span>,r);</span><br><span class=\"line\">    timer++;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> pi=l,pj=mid+<span class=\"number\">1</span>,x=l,pp;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(pi&lt;=mid&amp;&amp;pj&lt;=r)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(node[pi]&lt;node[pj])&#123;</span><br><span class=\"line\">            add(node[pi].c,<span class=\"number\">1</span>);</span><br><span class=\"line\">            temp[x++]=node[pi++];</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            ans[node[pj].id]+=que(node[pj].c);</span><br><span class=\"line\">            pp=pi<span class=\"number\">-1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(pp&gt;=l&amp;&amp;node[pp].a==node[pj].a&amp;&amp;node[pp].b==node[pj].b&amp;&amp;node[pp].c==node[pj].c) ans[node[pp--].id]++;</span><br><span class=\"line\">            temp[x++]=node[pj++];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(pi&lt;=mid) temp[x++]=node[pi++];</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(pj&lt;=r)&#123;</span><br><span class=\"line\">        ans[node[pj].id]+=que(node[pj].c);</span><br><span class=\"line\">        pp=mid;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(pp&gt;=l&amp;&amp;node[pp].a==node[pj].a&amp;&amp;node[pp].b==node[pj].b&amp;&amp;node[pp].c==node[pj].c) ans[node[pp--].id]++;</span><br><span class=\"line\">        temp[x++]=node[pj++];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=l;i&lt;=r;i++) node[i]=temp[i];</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> t1,t2,t3;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;n,&amp;k);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++) <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d%d\"</span>,&amp;t1,&amp;t2,&amp;t3),node[i]=(Node)&#123;t1,t2,t3,i&#125;;</span><br><span class=\"line\">    sort(node+<span class=\"number\">1</span>,node+n+<span class=\"number\">1</span>,cmp);</span><br><span class=\"line\">    cdq(<span class=\"number\">1</span>,n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++) cnt[ans[i]]++;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++) <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,cnt[i]);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","prev":{"title":"「BZOJ1935」[SHOI2007]园丁的烦恼","slug":"「BZOJ1935」-SHOI2007-园丁的烦恼"},"next":{"title":"「luogu2664」树上游戏","slug":"「luogu2664」树上游戏"},"link":"/2018/03/08","toc":[{"title":"题目大意","id":"题目大意","index":"1"},{"title":"解析","id":"解析","index":"2"},{"title":"代码","id":"代码","index":"3","children":[{"title":"CDQ分治","id":"CDQ分治","index":"3.1"}]}]}